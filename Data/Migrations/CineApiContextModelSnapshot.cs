// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cineApi.Data;

#nullable disable

namespace CineApi.Data.Migrations
{
    [DbContext(typeof(CineApiContext))]
    partial class CineApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("cineApi.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "James Cameron"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Juan José Campanella"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bong Joon-ho"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Damián Szifron"
                        });
                });

            modelBuilder.Entity("cineApi.Entities.Function", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("cineApi.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "USA",
                            DirectorId = 1,
                            Name = "Titanic"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Argentina",
                            DirectorId = 2,
                            Name = "El Secreto de Sus Ojos"
                        },
                        new
                        {
                            Id = 3,
                            Country = "USA",
                            DirectorId = 3,
                            Name = "Inception"
                        },
                        new
                        {
                            Id = 4,
                            Country = "South Korea",
                            DirectorId = 4,
                            Name = "Parasite"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Argentina",
                            DirectorId = 5,
                            Name = "Relatos Salvajes"
                        });
                });

            modelBuilder.Entity("cineApi.Entities.Function", b =>
                {
                    b.HasOne("cineApi.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("cineApi.Entities.Movie", b =>
                {
                    b.HasOne("cineApi.Entities.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });
#pragma warning restore 612, 618
        }
    }
}
